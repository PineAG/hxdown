name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
  build:
    strategy:
      matrix: 
        include:
          - os: macos-latest
            target: hxdown
            release: hxdown-macos
          - os: windows-latest
            target: hxdown.exe
            release: hxdown-win.exe
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose --release
    - name: Run tests
      run: cargo test --verbose
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: target/release/${{ matrix.target }}
        asset_name: hxdown-${{ matrix.release }}
        asset_content_type: application/x-executable

